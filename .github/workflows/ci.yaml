name: CI

on: push

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Send initial CI status
        run: >-
          curl -L -X POST
          -H 'Content-Type: application/json'
          -H 'Authorization: token ${{ secrets.BRANOHOLY_BOT_TOKEN }}'
          -d '{
            "state": "pending",
            "context": "CI / Status summary",
            "description": "In progress"
          }'
          'https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}'
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Check lock file version
        run: >-
          grep '"lockfileVersion": 2' package-lock.json
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.11.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit == false
        run: npm ci

  build:
    name: Build project
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.11.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Build project
        run: npm run build
        env:
          CI: true

  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.11.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: E2E tests
        run: npm run test:e2e:coverage
        env:
          CI: true
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v1.2.2
        with:
          flags: e2e

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.11.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Unit tests
        run: npm run test:unit:coverage
        env:
          CI: true
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v1.2.2
        with:
          flags: unit

  type-check:
    name: Check types
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.11.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Check types
        run: npm run type-check
        env:
          CI: true

  lint:
    name: Lint files
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.11.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Lint files
        run: npm run lint:all
        env:
          CI: true

  code-ql:
    name: CodeQL
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.11.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  check-node-versions:
    name: Check Node.js versions
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.11.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Check Node.js versions
        run: npm run node-versions-check

  send-ci-status-summary:
    name: Send CI status summary
    runs-on: ubuntu-latest
    needs:
      - build
      - e2e-tests
      - unit-tests
      - type-check
      - lint
      - code-ql
      - check-node-versions
    steps:
      - name: Send CI status summary
        run: >-
          curl -L -X POST
          -H 'Content-Type: application/json'
          -H 'Authorization: token ${{ secrets.BRANOHOLY_BOT_TOKEN }}'
          -d '{
            "state": "success",
            "context": "CI / Status summary",
            "description": "All checks passed"
          }'
          'https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}'
